{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","addButtonCreate","button","parentNode","parentElement","classList","remove","setAttribute","innerText","changeAllButtonsToAddButtons","Array","from","document","getElementsByTagName","map","arrayButton","dataset","cy","App","state","SelectedGood","click","this","className","type","onClick","setState","good","e","currentTarget","add","removeButtonCreate","Component","ReactDOM","render","getElementById"],"mappings":"2OAIaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAYF,SAASC,EAAgBC,GAA4B,IAAD,IAClD,UAAAA,EAAOC,kBAAP,mBAAmBC,qBAAnB,SAAkCC,UAC/BC,OAAO,gCACVJ,EAAOK,aAAa,UAAW,aAC/BL,EAAOG,UAAUC,OAAO,WAExBJ,EAAOM,UAAY,IAGrB,SAASC,IACPC,MAAMC,KAAKC,SACRC,qBAAqB,WACrBC,KAAI,SAAAC,GAAW,MAA+B,gBAA3BA,EAAYC,QAAQC,IACnChB,EAAgBc,MAGlB,IAAMG,EAAb,4MACEC,MAAQ,CACNC,aAAc,IAFlB,uDAKE,WACER,SAASC,qBAAqB,UAAU,GAAGQ,UAN/C,oBASE,WAAU,IAAD,OACCD,EAAiBE,KAAKH,MAAtBC,aAER,OACE,uBAAMG,UAAU,oBAAhB,UACE,oBAAIA,UAAU,sCAAd,SACGH,EAEG,+CACMA,EADN,gBAIE,wBACE,UAAQ,cACRI,KAAK,SACLD,UAAU,cACVE,QAAS,WACP,EAAKC,SAAS,CAAEN,aAAc,KAE9BX,UAKN,sBAGN,uBAAOc,UAAU,QAAjB,SACE,gCACGvB,EAAMc,KAAI,SAAAa,GACT,OACE,qBAAI,UAAQ,OAAO,YAAWA,EAA9B,UACE,6BACE,wBACE,UAAQ,YACRH,KAAK,SACLD,UAAU,SACVE,QAAS,SAACG,GACR,IAEuC,IAFjC1B,EAAS0B,EAAEC,cAEjB,GAA0B,cAAtB3B,EAAOc,QAAQC,GAUjB,OATAR,IA3E1B,SAA4BP,GAA4B,IAAD,IACrD,UAAAA,EAAOC,kBAAP,mBAAmBC,qBAAnB,SAAkCC,UAC/ByB,IAAI,gCACP5B,EAAOK,aAAa,UAAW,gBAC/BL,EAAOG,UAAUyB,IAAI,WAErB5B,EAAOM,UAAY,IAsEKuB,CAAmB7B,QACnB,EAAKwB,SACH,CACEN,aAAY,UAAElB,EACXC,kBADS,iBAAE,EACCC,qBADH,aAAE,EACgBY,QAAQW,OAO5C1B,EAAgBC,GAChB,EAAKwB,SACH,CACEN,aAAc,MAvBtB,iBAgCF,oBAAI,UAAQ,YAAYG,UAAU,eAAlC,SACGI,MAnCoCA,iBAxCzD,GAAyBK,aCvCzBC,IAASC,OACP,cAAC,EAAD,IACAtB,SAASuB,eAAe,W","file":"static/js/main.5df37969.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction removeButtonCreate(button: HTMLButtonElement) {\n  button.parentNode?.parentElement?.classList\n    .add('has-background-success-light');\n  button.setAttribute('data-cy', 'RemoveButton');\n  button.classList.add('is-info');\n  // eslint-disable-next-line no-param-reassign\n  button.innerText = '-';\n}\n\nfunction addButtonCreate(button: HTMLButtonElement) {\n  button.parentNode?.parentElement?.classList\n    .remove('has-background-success-light');\n  button.setAttribute('data-cy', 'AddButton');\n  button.classList.remove('is-info');\n  // eslint-disable-next-line no-param-reassign\n  button.innerText = '+';\n}\n\nfunction changeAllButtonsToAddButtons() {\n  Array.from(document\n    .getElementsByTagName('button'))\n    .map(arrayButton => arrayButton.dataset.cy !== 'ClearButton'\n      && addButtonCreate(arrayButton));\n}\n\nexport class App extends Component<{}, {}> {\n  state = {\n    SelectedGood: '',\n  };\n\n  componentDidMount() {\n    document.getElementsByTagName('button')[8].click();\n  }\n\n  render() {\n    const { SelectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1 className=\"title is-flex is-align-items-center\">\n          {SelectedGood\n            ? (\n              <>\n                {`${SelectedGood} is selected`}\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  data-cy=\"ClearButton\"\n                  type=\"button\"\n                  className=\"delete ml-3\"\n                  onClick={() => {\n                    this.setState({ SelectedGood: '' });\n\n                    changeAllButtonsToAddButtons();\n                  }}\n                />\n              </>\n            )\n            : 'No goods selected'}\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => {\n              return (\n                <tr data-cy=\"Good\" data-good={good} key={good}>\n                  <td>\n                    <button\n                      data-cy=\"AddButton\"\n                      type=\"button\"\n                      className=\"button\"\n                      onClick={(e) => {\n                        const button = e.currentTarget;\n\n                        if (button.dataset.cy === 'AddButton') {\n                          changeAllButtonsToAddButtons();\n                          removeButtonCreate(button);\n                          this.setState(\n                            {\n                              SelectedGood: button\n                                .parentNode?.parentElement?.dataset.good,\n                            },\n                          );\n\n                          return;\n                        }\n\n                        addButtonCreate(button);\n                        this.setState(\n                          {\n                            SelectedGood: '',\n                          },\n                        );\n                      }}\n                    >\n                      +\n                    </button>\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}